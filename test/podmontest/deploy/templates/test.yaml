apiVersion: v1
kind: ServiceAccount
metadata:
    name: podmontest
    namespace: {{ required "Must set namespace" .Values.podmonTest.namespace }}
---
{{- if eq .Values.podmonTest.deploymentType "statefulset" }}
kind: StatefulSet
{{ end }}
{{- if eq .Values.podmonTest.deploymentType "deployment" }}
kind: Deployment
{{ end }}
apiVersion: apps/v1
metadata:
    name: podmontest
    namespace: {{ required "Must set namespace" .Values.podmonTest.namespace }}
spec:
    selector:
        matchLabels:
          app: podmontest-{{ .Release.Namespace }}

{{- if eq .Values.podmonTest.deploymentType "statefulset" }}
    serviceName: 2vols
{{ end }}
{{- if gt (int .Values.podmonTest.replicas) 1 }}
    replicas: {{ required "Number of replicas" .Values.podmonTest.replicas }}
{{ end }}
    template:
      metadata:
        labels:
          app: podmontest-{{ .Release.Namespace }}
          podmon.dellemc.com/driver: {{ required "Must set driver label" .Values.podmonTest.driverLabel }}
          affinity: affinity
      spec:
{{- if ne .Values.podmonTest.zone "" }}
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: "topology.kubernetes.io/zone"
                  operator: In
                  values: 
                  - {{.Values.podmonTest.zone}}
{{end}}
{{- if eq .Values.podmonTest.podAffinity true}}
        affinity:
          podAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: "app"
                  operator: In
                  values: 
                  - podmontest-{{ .Release.Namespace }}
              topologyKey: "kubernetes.io/hostname"
{{end}}
        tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: {{ required "Number of seconds to tolerate unreachable taint" .Values.podmonTest.unreachableTolerationSeconds }}
        topologySpreadConstraints:
          - maxSkew: {{ required "Number of replicas" .Values.podmonTest.replicas }} #
            topologyKey: kubernetes.io/hostname
            whenUnsatisfiable: DoNotSchedule
            labelSelector:
              matchLabels:
                affinity: affinity
        serviceAccount: podmontest
        containers:
          - name: podmontest
            image: {{ required "Must set image for podmonTest" .Values.podmonTest.image }}
            imagePullPolicy: IfNotPresent
            command: [ "/podmontest" ]
            args:
              - "-doexit=true"
            env:
              - name: ROOT_DIR
                value: "/"
            volumeMounts:
{{- range $i, $e := untilStep 0 (int .Values.podmonTest.nvolumes) 1 }}
              - mountPath: /data{{$i}}
                name: pvol{{$i}}
{{end}}
            volumeDevices:
{{- range $i, $e := untilStep 0 (int .Values.podmonTest.ndevices) 1 }}
              - devicePath: /blockdata1{{$i}}
                name: pdev{{$i}}
{{end}}
        volumes:
{{- range $i, $e := untilStep 0 (int .Values.podmonTest.nvolumes) 1 }}
          - name: pvol{{$i}}
            persistentVolumeClaim:
              claimName: pvol{{$i}}
{{end}}
{{- range $i, $e := untilStep 0 (int .Values.podmonTest.ndevices) 1 }}
          - name: pdev{{$i}}
            persistentVolumeClaim:
              claimName: pdev{{$i}}
{{end}}
