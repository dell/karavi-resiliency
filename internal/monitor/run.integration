#!/bin/sh
# Copyright (c) 2021-2022 Dell Inc., or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
source int_test_params.sh

ITERATIONS=100
RESILIENCY=../..
SLEEP_TIME=${SLEEP_TIME:-300}

# Function to run the e2e test. Does some initial cleanup and captures logs.
run_e2e_test() {
  storage_type=$1
  driver_namespace=$2
  tester_prefix=$3

  # Clean up any left over test pods
  echo "Clean up any remaining $tester_prefix test pods"
  sh $RESILIENCY/test/podmontest/uns.sh --prefix "$tester_prefix" --instances 18
  sleep "$SLEEP_TIME"
  sh $RESILIENCY/tools/monx.sh --once

  # Run the e2e
  echo "****************** Execute the $storage_type E2E test *****************"
  make "${storage_type}-integration-test"
  RC=$?
  echo "E2E test for $storage_type had Return code: " $RC

  date
  sh $RESILIENCY/tools/monx.sh --once

  # Collect logs
  echo "Collecting driver logs from $driver_namespace namespace"
  sh $RESILIENCY/tools/collect_logs.sh --ns "$driver_namespace"
}

ITER=1
while [ $ITER -le $ITERATIONS ]; do
  date
  echo "Iteration: " $ITER

  run_e2e_test "powerflex" "vxflexos" "pmtv"
  run_e2e_test "unity" "unity" "pmtu"
  run_e2e_test "powerscale" "isilon" "pmti"

  sleep "$SLEEP_TIME"
  sh $RESILIENCY/tools/monx.sh --once

  ITER=$((ITER + 1))
  if [ -e stop ]; then
    echo "****************** Exiting due to stop file ******************"
    exit 0
  fi
done
